// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5505.Raphael;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX driveTalonSRX0;
    public static WPI_TalonSRX driveTalonSRX1;
    public static WPI_TalonSRX driveTalonSRX14;
    public static WPI_TalonSRX driveTalonSRX13;
    public static RobotDrive driveRobotDrive41;
    public static WPI_TalonSRX driveTalonSRX2RightFollow;
    public static WPI_TalonSRX driveTalonSRX15LeftFollow;
    public static DoubleSolenoid driveshifterSolenoid;
    public static WPI_TalonSRX intakeintakeTalon1;
    public static WPI_TalonSRX intakeintakeTalon2;
    public static WPI_TalonSRX climberclimbTalon1;
    public static WPI_TalonSRX climberclimbTalon2;
    public static WPI_TalonSRX climberelevadorTalon;
    public static DoubleSolenoid climberhookPiston;
    public static DoubleSolenoid climbershifterSolenoid;
    public static WPI_TalonSRX climberelevadorTalon2;
    public static WPI_TalonSRX intakePitchpitchTalon;
    public static DigitalInput intakePitchpitchSwitch;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTalonSRX0 = new WPI_TalonSRX(0);
        
        
        driveTalonSRX1 = new WPI_TalonSRX(1);
        
        
        driveTalonSRX14 = new WPI_TalonSRX(14);
        
        
        driveTalonSRX13 = new WPI_TalonSRX(13);
        
        
        driveRobotDrive41 = new RobotDrive(driveTalonSRX0, driveTalonSRX1,
              driveTalonSRX13, driveTalonSRX14);
        
        driveRobotDrive41.setSafetyEnabled(false);
        driveRobotDrive41.setExpiration(0.1);
        driveRobotDrive41.setSensitivity(0.5);
        driveRobotDrive41.setMaxOutput(1.0);

        driveTalonSRX2RightFollow = new WPI_TalonSRX(2);
        
        
        driveTalonSRX15LeftFollow = new WPI_TalonSRX(15);
        
        
        driveshifterSolenoid = new DoubleSolenoid(0, 5, 2);
        LiveWindow.addActuator("drive", "shifterSolenoid", driveshifterSolenoid);
        
        intakeintakeTalon1 = new WPI_TalonSRX(8);
        
        
        intakeintakeTalon2 = new WPI_TalonSRX(9);
        
        
        climberclimbTalon1 = new WPI_TalonSRX(12);
        
        
        climberclimbTalon2 = new WPI_TalonSRX(3);
        
        
        climberelevadorTalon = new WPI_TalonSRX(6);
        
        
        climberhookPiston = new DoubleSolenoid(0, 6, 4);
        LiveWindow.addActuator("climber", "hookPiston", climberhookPiston);
        
        climbershifterSolenoid = new DoubleSolenoid(0, 7, 3);
        LiveWindow.addActuator("climber", "shifterSolenoid", climbershifterSolenoid);
        
        climberelevadorTalon2 = new WPI_TalonSRX(10);
        
        
        intakePitchpitchTalon = new WPI_TalonSRX(7);
        
        
        intakePitchpitchSwitch = new DigitalInput(0);
        LiveWindow.addSensor("intakePitch", "pitchSwitch", intakePitchpitchSwitch);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
